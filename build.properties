; BUILD PROPERTIES
; ----------------------------------------------------------------------------
; see the comments on the configuration vars for a description. note that 
; leaving vars empty won’t disable the feature – you will have to comment
; not used variables out to use their defaults.

; build.task.dir=				task
; build.environment.dir=		environment

; GIT ------------------------------------------------------------------------

; set this to a valid filename where the current git hash should be stored.
; git.revision-hash.file=		

; VERSION --------------------------------------------------------------------

; filename of the file that keeps the current version, uncomment to skip
version.filename=					VERSION
; type of release to increase version number by default, valid options are:
;		Major | Minor | Bugfix
; you can overwrite this from the command line:
; 		$ phing version -Dversion.releasetype=Minor
version.releasetype=				Bugfix

; RELEASE --------------------------------------------------------------------

; target directory for zip file releases
release.dir=						build/release
; filename pattern for zip without file extension
release.filename=					prefix_${date}

; GEMS -----------------------------------------------------------------------

; space seperatd list of ruby gems that are used in the project, installed
; during phing install
ruby.gems=							compass

; ASSETS ---------------------------------------------------------------------
assets.root=						public

; Location of the yui compressor jar file, use install task to install it
; on this location, it can compress and minify javascript and css files
assets.yui.jar=					bin/yuicompressor.jar
assets.yui.version=				2.4.6
; additional options for closure compiler, leave blank for none
assets.yui.extra=

; JAVASCRIPT
assets.js.soure-dir=				js/source
; list of js-files relative to js.source-dir that should be compressed
; note that the order of the files is important
assets.js.files= 					app.js
; location of the compressed app.js relative to assets.root
assets.js.target-dir=			js/min
; optional name of the created file
; assets.js.target-filename=	app.js

; CSS/STYLES
; location of source css files
assets.css.source-dir=			css/source
; list of filenames that should be compressed
assets.css.files=					app.css
; target directory for created compressed application styles
assets.css.target-dir=			css/min
; optional name of the created file
; assets.css.target-filename=	app.js

; ENVIRONMENTS ---------------------------------------------------------------

; list of environments the build script can work with. used in the deploy and
; config sub tasks. Create a commas-seperated list
environments=						local,test

; DEPLOYMENT -----------------------------------------------------------------

; Deployment method that should be used, available options are: ftp | rsync
; note that you have differnt options to set depending on the deployment
; method
deploy.method=						rsync
; the default environment that should be used when deploy task gets no
; enviroment from the command line, should be part of the $environments
deploy.default-environment=	live

; default rsync list of short arguments, leave this commented out if you
; don’t have any problems
deploy.rsync.options=			avzcuC
; rsync command extras for all rsync deployments
deploy.rsync.extra=				--progress
; deployment targets depend on the environments config and can be nested.
; set deploy.[environment].target to set this target only in the specified
; environment.
deploy.live.rsync.target=		ssh-host-name:target/directory/
; rsync local root to deploy from, leave empty for project root
deploy.live.rsync.source=		
; rsync extra options, for this target
deploy.live.rsync.extra=

; example configuration for ftp deployment on live environment
; deploy.live.ftp.port=			21
; deploy.live.ftp.dir=				webseiten/mywebsite/public/
; deploy.live.ftp.host=			ftp.mywebsite.com
; deploy.live.ftp.user=			username
; deploy.live.ftp.pass=			password
; deploy.live.ftp.source=		./